// const filter = function (array, test) {
//   const filteredElements = [];

//   for (const element of array) {
//     const passed = test(element);

//     if (passed) {
//       filteredElements.push(element);
//     }
//   }

//   return filteredElements;
// };

// const fruits = [
//   { name: 'apples', quantity: 200, isFresh: true },
//   { name: 'grapes', quantity: 150, isFresh: false },
//   { name: 'bananas', quantity: 100, isFresh: true },
// ];

// const freshFruits = filter(fruits, fruit => fruit.isFresh);
// console.log(freshFruits); // –º–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ apples –∏ bananas

// const fruitsWithQuantity = filter(fruits, fruit => fruit.quantity >= 120);
// console.log(fruitsWithAmount); // –º–∞—Å—Å–∏–≤ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ apples –∏ grapes


//–ó–∞–¥–∞—á–∞ –Ω–∞ –∑–∞–º—ã–∫–∞–Ω–∏–µ. –ù–∞–ø–∏—à–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –ø–æ–≤–∞—Ä–æ–º –Ω–µ–∫–æ–≥–æ –±–ª—é–¥–∞.

// const makeShef = function (name) {
//   /*
//    * –ü–∞—Ä–∞–º–µ—Ç—Ä name —ç—Ç–æ –ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ makeShef.
//    * –≠—Ç–æ –∑–Ω–∞—á–∏—Ç —á—Ç–æ –æ–Ω–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ makeDish —á–µ—Ä–µ–∑ –∑–∞–º—ã–∫–∞–Ω–∏–µ.
//    */
//   return function makeDish(dish) {
//     console.log(`${name} is cooking ${dish}`);
//   };
// };

// const mango = makeShef('Mango');
// mango('apple pie'); // Mango is cooking apple pie
// mango('beef stew'); // Mango is cooking beef stew

// const poly = makeShef('Poly');
// poly('pancakes'); // Poly is cooking pancakes
// poly('eggs and bacon'); // Poly is cooking eggs and bacon

/*
 * –§–∏–ª—å—Ç—Ä
 */

// const filter = (array, test) => {
//     const filteredArray = [];

//     for (const el of array) {
//         console.log(el);
//         const passed = test(el);

//         if (passed) {
//             filteredArray.push(el);
//         }
//     }

//     return filteredArray;
// };

// // 1. –Ω–∞–¥–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
// // 2. —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
// // 3. –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç true
// // 3. –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –ù–ï —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç —É—Å–ª–æ–≤–∏—é —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω–µ—Ç false

// const callback1 = value => {
//     return value >= 3;
// };

// const r1 = filter([1, 2, 3, 4, 5], callback1);
// console.log(r1);

// const callback2 = value => {
//     return value <= 4;
// };

// const r2 = filter([1, 2, 3, 4, 5, 6, 7, 8], callback2);
// console.log(r2);

// const fruits = [
//     { name: 'apples', quantity: 200, isFresh: true },
//     { name: 'grapes', quantity: 150, isFresh: false },
//     { name: 'bananas', quantity: 100, isFresh: true },
// ];

// const getFruitsWithQuantity = fruit => {
//     return fruit.quantity >= 120;
// };

// const r3 = filter(fruits, getFruitsWithQuantity);
// console.log(r3);

/*
 * –û–∫—Ä—É–≥–ª—è—Ç–æ—Ä ü§∑‚Äç‚ôÇÔ∏è
 */

// const floatingPoint = 3.456789;
// const someInt = Math.round(floatingPoint); // 3
// const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// const rounder = function (number, places) {
//     return Number(number.toFixed(places));
// };

// console.log(rounder(3.4567, 2));
// console.log(rounder(3.4567, 3));
// console.log(rounder(5.1234, 2));
// console.log(rounder(3.4567, 3));

// const rounder = function (places) {
//     return function (number) {
//         return Number(number.toFixed(places));
//     };
// };

// const rounder2 = rounder(2);
// const rounder3 = rounder(3);

// console.dir(rounder2);
// console.dir(rounder3);

// console.log(rounder2(3.4567));
// console.log(rounder2(5.4512312312367));
// console.log(rounder3(3.4567));
// console.log(rounder2(5.1234));
// console.log(rounder3(3.4567));
// console.log(rounder3(10.67667));


///////–ó–∞–¥–∞–Ω–∏–µ 4/10
// const pizzaPalace = {
//   pizzas: ['–£–ª—å—Ç—Ä–∞—Å—ã—Ä', '–ê–ª—å –ö–æ–ø—á–∏–Ω–æ', '–ß–µ—Ç—ã—Ä–µ –Ω–∞—Ä–µ–∑–æ–Ω–∞'],
//   order(pizzaName, onSuccess, onError) {
//       for(let pizza of this.pizzas){
//           if (pizzaName === pizza) {
//               return onSuccess(pizzaName);
//            }
//       }
//       return onError(`–í –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–µ –Ω–µ—Ç –ø–∏—Ü—Ü—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º ${pizzaName}.`);
//   },
// };
// // –ü–∏—à–∏ –∫–æ–¥ –≤—ã—à–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏

// // –ö–æ–ª–±—ç–∫ –¥–ª—è onSuccess
// function makePizza(pizzaName) {
//   return `–í–∞—à –∑–∞–∫–∞–∑ –ø—Ä–∏–Ω—è—Ç. –ì–æ—Ç–æ–≤–∏–º –ø–∏—Ü—Ü—É ${pizzaName}.`;
// }

// // –ö–æ–ª–±—ç–∫ –¥–ª—è onError
// function onOrderError(error) {
//   return `–û—à–∏–±–∫–∞! ${error}`;
// }

// // –í—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–∞ —Å –∫–æ–ª–±—ç–∫–∞–º–∏
// pizzaPalace.order('–ê–ª—å –ö–æ–ø—á–∏–Ω–æ', makePizza, onOrderError);
// pizzaPalace.order('–ß–µ—Ç—ã—Ä–µ –Ω–∞—Ä–µ–∑–æ–Ω–∞', makePizza, onOrderError);
// pizzaPalace.order('–ë–∏–≥ –º–∞–π–∫', makePizza, onOrderError);
// pizzaPalace.order('–í–µ–Ω—Å–∫–∞—è', makePizza, onOrderError);


/////////–ó–∞–¥–∞–Ω–∏–µ 7/10
// –°–µ—Ä–≤–∏—Å—É –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è –∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –µ–¥—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞–∫–∞–∑–∞.
// –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é composeMessage(position) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ —Å—Ç—Ä–æ–∫—É 
//–≤ —Ñ–æ—Ä–º–∞—Ç–µ '–ì–æ—Ç–æ–≤–∏–º <–±–ª—é–¥–æ> –¥–ª—è <–ø–æ—á—Ç–∞>. –í–∞—à –∑–∞–∫–∞–∑ <–ø–æ–∑–∏—Ü–∏—è>-–π –≤ –æ—á–µ—Ä–µ–¥–∏.' –ü–æ–∑–∏—Ü–∏—è —ç—Ç–æ 
//–∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ position - –ø–æ–∑–∏—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ(–Ω–∞ –µ–¥–∏–Ω–∏—Ü—É –±–æ–ª—å—à–µ —á–µ–º –∏–Ω–¥–µ–∫—Å).
// –ù–µ –æ–±—ä—è–≤–ª—è–π –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–∏ composeMessage(position).
// –ò—Å–ø–æ–ª—å–∑—É–π call –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ–¥–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞-–∑–∞–∫–∞–∑–∞.
// –ò—Å–ø–æ–ª—å–∑—É–π this –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞-–∑–∞–∫–∞–∑–∞ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–Ω–∞ –±—ã–ª–∞ –≤—ã–∑—ã–≤–∞–Ω–∞.

// const orders = [
//   { email: 'solomon@topmail.ua', dish: 'Burger' },
//   { email: 'artemis@coldmail.net', dish: 'Pizza' },
//   { email: 'jacob@mail.com', dish: 'Taco' },
// ];

// // –ü–∏—à–∏ –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
// function composeMessage(position) {
//    return `–ì–æ—Ç–æ–≤–∏–º ${this.dish} –¥–ª—è ${this.email}. –í–∞—à –∑–∞–∫–∞–∑ ${position}-–π –≤ –æ—á–µ—Ä–µ–¥–∏.`;
// }
 

// 1 —Å–ø–æ—Å–æ–±
//  const messages = [];
// for (let index = 0; index < orders.length; index++){
//     const order = orders[index];
//     const message = composeMessage.call(order, index + 1);
//     messages.push(message);
// }

// //2—Å–ø–æ—Å–æ–±
// const messages = orders.map(function (order, index) {
//     return composeMessage.call(order, index + 1);   
// })

// console.log(messages);


////–ó–∞–¥–∞–Ω–∏–µ 10\10
const service = {
  mailingList: ['mango@mail.com', 'poly@hotmail.de', 'ajax@jmail.net'],
  subscribe(email) {
    this.mailingList.push(email);
    return `–ü–æ—á—Ç–∞ ${email} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫—É.`;
  },
  unsubscribe(email) {
    this.mailingList = this.mailingList.filter((e) => e !== email);
    return `–ü–æ—á—Ç–∞ ${email} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏.`;
  },
};

function logAndInvokeAction(email, action) {
  console.log(`–í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å ${email}.`);
  return action(email);
}

const firstInvoke = logAndInvokeAction('kiwi@mail.uk', service.subscribe.bind(service));
console.log(firstInvoke);
// –ü–æ—á—Ç–∞ kiwi@mail.uk –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Ä–∞—Å—Å—ã–ª–∫—É.

console.log(service.mailingList);
/* ['mango@mail.com', 
    'poly@hotmail.de', 
    'ajax@jmail.net', 
    'kiwi@mail.uk']*/
const secondInvoke = logAndInvokeAction('poly@hotmail.de', service.unsubscribe.bind(service));
console.log(secondInvoke);
// –ü–æ—á—Ç–∞ poly@hotmail.de —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Ä–∞—Å—Å—ã–ª–∫–∏.

console.log(service.mailingList); // ['mango@mail.com', 'ajax@jmail.net', 'kiwi@mail.uk']
